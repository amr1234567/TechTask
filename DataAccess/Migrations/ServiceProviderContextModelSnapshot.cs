// <auto-generated />
using System;
using DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ServiceProviderContext))]
    partial class ServiceProviderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ServiceProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ServiceProviderId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "6b2e8e31-4ec3-4e38-b2f9-4e1a7618bc06",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Product 1",
                            Price = 100.0,
                            ServiceProviderId = "c710f447-9288-4d60-a7ad-7ee3b11a8219",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "fb442d4b-1a9d-431e-af2d-245913adca77",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Product 2",
                            Price = 150.0,
                            ServiceProviderId = "c710f447-9288-4d60-a7ad-7ee3b11a8219",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "49a5ac1b-729f-45df-b7b4-df159cb2aed1",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Product 3",
                            Price = 170.0,
                            ServiceProviderId = "c710f447-9288-4d60-a7ad-7ee3b11a8219",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "fd67dbc7-3b02-4712-a458-ed7c871ada79",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Product 4",
                            Price = 100.0,
                            ServiceProviderId = "7ed42c39-2f22-4229-b7a2-5c3ca53fa164",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "d20cb994-1b19-44a2-8480-914e7d914e52",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Product 5",
                            Price = 100.0,
                            ServiceProviderId = "7ed42c39-2f22-4229-b7a2-5c3ca53fa164",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "e4f394cc-4986-4548-9d88-2bc7c5c5ba8d",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Product 6",
                            Price = 100.0,
                            ServiceProviderId = "7ed42c39-2f22-4229-b7a2-5c3ca53fa164",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "4f2ed00c-34ed-4401-b204-2dc175725ade",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Product 7",
                            Price = 100.0,
                            ServiceProviderId = "2364468a-f4da-415f-b170-1e51f3c3bbfc",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "f408f0f2-8c31-4a2a-a309-1c44aaf6ab71",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Product 8",
                            Price = 100.0,
                            ServiceProviderId = "2364468a-f4da-415f-b170-1e51f3c3bbfc",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "7bf5fb24-786d-46b1-8dd1-316ccab56a24",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Product 9",
                            Price = 100.0,
                            ServiceProviderId = "2364468a-f4da-415f-b170-1e51f3c3bbfc",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Domain.Models.ServiceProvider", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactDetails")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ServiceProviders");

                    b.HasData(
                        new
                        {
                            Id = "c710f447-9288-4d60-a7ad-7ee3b11a8219",
                            ContactDetails = "Contact Details 1",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Service Provider 1",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "7ed42c39-2f22-4229-b7a2-5c3ca53fa164",
                            ContactDetails = "Contact Details 2",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Service Provider 2",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = "2364468a-f4da-415f-b170-1e51f3c3bbfc",
                            ContactDetails = "Contact Details 3",
                            CreatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local),
                            Name = "Service Provider 3",
                            UpdatedAt = new DateTime(2025, 3, 27, 19, 32, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("Domain.Models.Product", b =>
                {
                    b.HasOne("Domain.Models.ServiceProvider", "ServiceProvider")
                        .WithMany("Products")
                        .HasForeignKey("ServiceProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceProvider");
                });

            modelBuilder.Entity("Domain.Models.ServiceProvider", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
